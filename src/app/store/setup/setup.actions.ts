import { createActionGroup, emptyProps, props } from '@ngrx/store';
import {
  ResponseError,
  Skills,
  UserCareerInterests,
  UserDegree,
  UserHighSchool,
  UserLanguage,
  UserPersonalInfo,
  UserProfile,
  UserSkills,
  UserWorkExperience,
} from '../../clients/utils/models/userProfile.models';

export const setupActions = createActionGroup({
  source: 'Setup',
  events: {
    getUserProfile: emptyProps(),
    getUserProfileSuccess: props<{ response: UserProfile }>(),
    getUserProfileFailure: props<{ errors: ResponseError }>(),
    careerInterest: props<{ request: UserCareerInterests }>(),
    careerInterestSuccess: props<{ response: UserProfile }>(),
    careerInterestFailure: props<{ errors: ResponseError }>(),
    generalInfo: props<{ request: UserPersonalInfo }>(),
    generalInfoSuccess: props<{ response: UserProfile }>(),
    generalInfoFailure: props<{ errors: ResponseError }>(),
    addCV: props<{ request: FormData }>(),
    addCVSuccess: props<{ response: UserProfile }>(),
    addCVFailure: props<{ errors: ResponseError }>(),
    deleteCV: emptyProps(),
    deleteCVSuccess: props<{ response: UserProfile }>(),
    deleteCVFailure: props<{ errors: ResponseError }>(),
    getCV: emptyProps(),
    getCVSuccess: props<{ response: Blob }>(),
    getCVFailure: props<{ errors: ResponseError }>(),
    addWorkExperience: props<{ request: UserWorkExperience }>(),
    addWorkExperienceSuccess: props<{ response: UserProfile }>(),
    addWorkExperienceFailure: props<{ errors: ResponseError }>(),
    updateWorkExperience: props<{ request: UserWorkExperience }>(),
    updateWorkExperienceSuccess: props<{ response: UserProfile }>(),
    updateWorkExperienceFailure: props<{ errors: ResponseError }>(),
    deleteWorkExperience: props<{ request: number }>(),
    deleteWorkExperienceSuccess: props<{ response: UserProfile }>(),
    deleteWorkExperienceFailure: props<{ errors: ResponseError }>(),
    addLanguage: props<{ request: UserLanguage }>(),
    addLanguageSuccess: props<{ response: UserProfile }>(),
    addLanguageFailure: props<{ errors: ResponseError }>(),
    updateLanguage: props<{ request: UserLanguage }>(),
    updateLanguageSuccess: props<{ response: UserProfile }>(),
    updateLanguageFailure: props<{ errors: ResponseError }>(),
    deleteLanguage: props<{ request: number }>(),
    deleteLanguageSuccess: props<{ response: UserProfile }>(),
    deleteLanguageFailure: props<{ errors: ResponseError }>(),
    getSkills: props<{ request: string }>(),
    getSkillsSuccess: props<{ response: Skills[] }>(),
    getSkillsFailure: props<{ errors: ResponseError }>(),
    addDegree: props<{ request: UserDegree }>(),
    addDegreeSuccess: props<{ response: UserProfile }>(),
    addDegreeFailure: props<{ errors: ResponseError }>(),
    addHighSchool: props<{ request: UserHighSchool }>(),
    addHighSchoolSuccess: props<{ response: UserProfile }>(),
    addHighSchoolFailure: props<{ errors: ResponseError }>(),
    addSkills: props<{ request: UserSkills[] }>(),
    addSkillsSuccess: props<{ response: UserProfile }>(),
    addSkillsFailure: props<{ errors: ResponseError }>(),
  },
});